{"version":3,"sources":["p2-homeworks/h5/hw5.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","img","alt","src","avatar","content","name","text","time","clear","messageData","HW1","Affair","affair","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClassTrue","errorFalse","displayNone","value","onChange","errorText","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","setTimeout","alert","HW3","setUsers","usersArray","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","placeholder","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","restoreValue","PreJunior","Error404","JuniorPlus","PATH","Routes","path","exact","render","to","Header","activeMenu","setActiveMenu","menuWrapper","burgerMenu","containerMenuLinks","activeClassName","active","menuLinks","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0907ea42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuWrapper\":\"hw5_menuWrapper__2x_VJ\",\"burgerMenu\":\"hw5_burgerMenu__bs6r_\",\"containerMenuLinks\":\"hw5_containerMenuLinks__2SknV\",\"activeMenu\":\"hw5_activeMenu__17Q8K\",\"menuLinks\":\"hw5_menuLinks__3BJH6\",\"active\":\"hw5_active__1b596\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__25yjI\",\"img\":\"Message_img__1ATHl\",\"content\":\"Message_content__30jwG\",\"name\":\"Message_name__2_dEA\",\"text\":\"Message_text__g2jFz\",\"time\":\"Message_time__3AZVk\",\"clear\":\"Message_clear__3ABbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1hJg2\",\"error\":\"Greeting_error__25cUs\",\"errorFalse\":\"Greeting_errorFalse__Ea6O0\",\"input\":\"Greeting_input__2zCuP\",\"errorText\":\"Greeting_errorText__3zlcA\",\"totalUsers\":\"Greeting_totalUsers__3LwG0\",\"displayNone\":\"Greeting_displayNone__hYHbj\",\"button\":\"Greeting_button__2zB8B\",\"content\":\"Greeting_content__3v9qX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__F4q3l\",\"input\":\"SuperInputText_input__n-oTa\",\"errorInput\":\"SuperInputText_errorInput__2e7mf\",\"error\":\"SuperInputText_error__3CxLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Affairs\":\"Affairs_Affairs__PFqud\",\"button\":\"Affairs_button__udJfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__D1ka8\",\"column\":\"HW4_column__47bQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1IIC4\",\"red\":\"SuperButton_red__1CCfd\",\"button\":\"SuperButton_button__11MFq\",\"blink\":\"SuperButton_blink__1Rlog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__NyR2A\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Bosx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Fo5H\"};","import React from \"react\";\nimport s from \"./Message.module.css\"\n\n\ntype MassagePropsType= {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: MassagePropsType) {\n    return (\n        <div className={s.message}>\n           <img className={s.img} alt='Текст' src={props.avatar}/>\n           <div className={s.content}>\n               <div className={s.name}>{props.name}</div>\n               <div className={s.text}>{props.message}</div>\n               <div className={s.time}>{props.time}</div>\n           </div>\n            <div className={s.clear}></div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Artem\",\n    message: \"npm start press?\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work */}\n\n            <Message\n                avatar ={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n\n            <button className={s.button} onClick={deleteCallback}> X</button>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType} from \"./HW2\";\nimport {FilterType} from \"./HW2\"\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }; // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div className={s.Affairs}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n// need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"low\") return affairs.filter(t => t.priority === \"low\")\n    if (filter === \"high\") return affairs.filter(t => t.priority === \"high\")\n    if (filter === \"middle\") return affairs.filter(t => t.priority === \"middle\")\n    return affairs\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(t => t._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: boolean\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClassTrue = s.errorFalse;\n    const displayNone = s.displayNone;\n    return (\n\n        <div className={s.content}>\n            <input value={name} onChange={setNameCallback} className={error ? inputClassTrue : \"\"}/>\n            <div className={error ? s.errorText : displayNone}>{error ? 'Введите имя' : ''}</div>\n            <button onClick={addUser} className={s.button}>add</button>\n            <br/>\n            <span className={s.totalUsers}>Добавлено пользователей: {totalUsers}</span>\n        </div>\n\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>//типизированный  users , см. from \"./HW3\"\n    addUserCallback: (name: string) => void // !!!!!\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // см.type GreetingPropsType в Greeting.tsx\n    const [error, setError] = useState<boolean>(false); // -//-\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // e-объект\n        setName(e.currentTarget.value); // e.currentTarget.value-элемент, кот.вызывает обработчик в процессе всплытия\n    };\n    const addUser = () => {\n        if (name === '') {\n            setError(true)\n        } else {\n            setError(false)\n            setTimeout(() => alert(`Hello ${name} !`), 10);\n            addUserCallback(name)\n        }\n    };\n\n    const totalUsers = users.length; // Возвращает строковое представление массива.\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // массив с типом <UserType>\n\n    const addUserCallback = (name: string) => {\n        let usersArray = {_id: v1(), name: name} //создаем переменную для измененного массива\n        setUsers([...users, usersArray]); // из копии ...users с изменениями в usersArray\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                placeholder=\"Please enter text\"\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(!editMode); // complete\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(!editMode); //complete\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(!editMode); // complete\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `input-hw6`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n\n","/*import React from \"react\";\n\nexport function saveState<T> (key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\nexport type StateType = {\n    inputValue: string\n}*/\n\n\n// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        const restoreValue = restoreState(\"editable-span-value\", value)\n        setValue(restoreValue)\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n            <div className='wrapper-hw6'>\n                <div>\n                    <SuperEditableSpan\n                        value={value}\n                        onChangeText={setValue}\n                        spanProps={{children: value ? undefined : \"enter text...\"}}\n                    />\n                </div>\n                <div className='button-hw6'>\n                    <SuperButton onClick={save}>save</SuperButton>\n                    <SuperButton onClick={restore}>restore</SuperButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <div className='size'>\n                <div className='title'>Наполнение для PreJunior</div></div>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        /* <div>\n             {/!*<div>404</div>*!/}\n             {/!*<div>Page not found!</div>*!/}\n             {/!*<div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>*!/}*/\n\n\n        <div className='wrapper'>\n            <div className=\"mainbox\">\n                <div className=\"err\">4</div>\n                <i className=\"far fa-question-circle fa-spin\"></i>\n                <div className=\"err2\">4</div>\n                <div className=\"msg\">Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in\n                    the\n                    first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Error404\n","import React from \"react\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport './../style.css'\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div className='size'>\r\n            <div className='title'>Наполнение для Junior+</div>\r\n            <HW3/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Switch, Redirect, Route} from 'react-router-dom';\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths//\n    JUNIOR_PLUS: \"/junior-plus\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n\n            <Switch>\n\n            {/*/!*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*!/*/}\n            {/*/!*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*!/*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n            {/*    // add routes*/}\n\n            {/*/!*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*!/*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} exact render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} exact render={() => <JuniorPlus/>}/>\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {useState} from \"react\";\nimport s from './hw5.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from './Routes'\n\n\nfunction Header() {\n            // add NavLinks\n            const [activeMenu, setActiveMenu] = useState<boolean>(false);\n            const toggle = () => {\n                setActiveMenu(!activeMenu)\n            }\n\n            return (\n            <div className={s.menuWrapper}>\n                <div className={s.burgerMenu} onClick={toggle}>&#9776;</div>\n                <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\n                    <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.active} className={s.menuLinks}> PreJunior</NavLink>\n                    <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.active} className={s.menuLinks}> Junior + </NavLink>\n                    <NavLink to={\"/todo\"} activeClassName={s.active} className={s.menuLinks}> ToDo list </NavLink>\n                    <NavLink to={\"/checkbox\"} activeClassName={s.active} className={s.menuLinks}> My check box </NavLink>\n                    <NavLink to={\"/button\"} activeClassName={s.active} className={s.menuLinks}> My button </NavLink>\n                </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport { HashRouter } from 'react-router-dom'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}